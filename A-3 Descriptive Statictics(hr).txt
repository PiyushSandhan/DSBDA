###...
Descriptive Statistics - Measures of Central Tendency and variability
Perform the following operations on any open source dataset (e.g., data.csv)
1. Provide summary statistics (mean, median, minimum, maximum, standard deviation) for 
a dataset (age, income etc.) with numeric variables grouped by one of the qualitative 
(categorical) variable. For example, if your categorical variable is age groups and 
quantitative variable is income, then provide summary statistics of income grouped by 
the age groups. Create a list that contains a numeric value for each response to the 
categorical variable. 

...###



import pandas as pd
import numpy as np


df=pd.read_csv("hr.csv")
df



df.columns


# Mean of monthly income and age
print("The mean of monthly income is : ",df.loc[:,"MonthlyIncome"].mean())
print("The mean of age is : ",df.loc[:,"Age"].mean())



#Median of monthly income and age
print("The median of monthly income is :",df.loc[:,"MonthlyIncome"].median())
print("The median of age is :",df.loc[:,"Age"].median())




#Mode of monthly income and age
print("The mode of monthly income is :",df.loc[:,"MonthlyIncome"].mode())
print("The mode of age is :",df.loc[:,"Age"].mode())





#Standard deviation of monthly income and age
print("The standard deviation of monthly income is :",df.loc[:,"MonthlyIncome"].std())
print("The standard deviation of age is :",df.loc[:,"Age"].std())





#Storing age and monthly income in array and then finding maximum and minimum values
array1=np.array(df['MonthlyIncome'])
array2=np.array(df["Age"])
print("Income",array1)
print("Age array",array2)
print("Maximum income among the employees is :",max(array1))
print("Minimum income among the employees is :",min(array1))
print("Maximum age among the employees is :",max(array2))
print("Minimum age among the employees is :",min(array2))





# Replacing the categorical values by numeric values
df['BusinessTravel'].replace({'Travel_Rarely':0,'Travel_Frequently':1},inplace=True)
df['Department'].replace({'Sales':0,'Research & Development':1},inplace=True)
df['Attrition'].replace({'Yes':1,'No':0},inplace=True)
df['EducationField'].replace({'Life Sciences':0,'Medical':0,},inplace=True)
df




